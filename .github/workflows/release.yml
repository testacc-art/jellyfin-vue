name: Stable release 🕊️📦

on:
  release:
    types:
      - released
      - prereleased

jobs:
  docker:
    name: Build frontend Docker images 💿💻
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v3.3.0

      - name: Configure QEMU ⚙️
        uses: docker/setup-qemu-action@v2.1.0

      - name: Configure Docker Buildx ⚙️
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to Docker Hub 🔑
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry 🔑
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.JF_BOT_TOKEN }}

      - name: Build and push stable images 🛠️⬆️
        if: github.event.action == 'released'
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm
          build-args: |
            IS_STABLE=1
          tags: |
            jellyfin/jellyfin-vue:stable
            jellyfin/jellyfin-vue:stable.${{ github.event.release.tag_name }}
            jellyfin/jellyfin-vue:latest
            ghcr.io/jellyfin/jellyfin-vue:stable
            ghcr.io/jellyfin/jellyfin-vue:stable.${{ github.event.release.tag_name }}
            ghcr.io/jellyfin/jellyfin-vue:latest

      - name: Build and push release candidate images 🛠️⬆️
        if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm
          build-args: |
            IS_STABLE=1
          tags: |
            jellyfin/jellyfin-vue:stable-rc
            jellyfin/jellyfin-vue:stable-rc.${{ github.event.release.tag_name }}
            ghcr.io/jellyfin/jellyfin-vue:stable-rc
            ghcr.io/jellyfin/jellyfin-vue:stable-rc.${{ github.event.release.tag_name }}

  tauri:
    name: Build Tauri 🛠️
    strategy:
      fail-fast: false
      matrix:
        platform:
          - 'macos-latest'
          - 'ubuntu-latest'
          - 'windows-latest'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v3.3.0

      - name: Setup node environment ⚙️
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: 'npm'
          check-latest: true

      - name: Install dependencies 📦
        run: npm ci --no-audit -w tauri

      - name: Install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: Generate Tauri icons 🖌️
        run: 'npm run tauri:icon -w tauri'

      - name: Build Tauri 🛠️
        run: 'npm run tauri:build -w tauri'

      - name: Upload artifact (Linux) ⬆️🐧
        uses: actions/upload-artifact@v3.1.2
        if: matrix.platform == 'ubuntu-latest'
        with:
          name: jellyfin-vue_linux-amd64
          path: |
            tauri/target/release/bundle/deb/*.deb
            tauri/target/release/bundle/appimage_deb

      - name: Upload artifact (MacOS) ⬆️🍎
        uses: actions/upload-artifact@v3.1.2
        if: matrix.platform == 'macos-latest'
        with:
          name: jellyfin-vue_macOS
          path: |
            tauri/target/release/bundle/macos
            tauri/target/release/bundle/dmg/*.dmg

      - name: Upload artifact (Windows) ⬆️🪟
        uses: actions/upload-artifact@v3.1.2
        if: matrix.platform == 'windows-latest'
        with:
          name: jellyfin-vue_windows_amd64
          path: tauri/target/release/jellyfin-vue.exe
